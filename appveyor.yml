### ----------------------
### General Configuration
### ----------------------

environment:
  global:
    CMD_IN_ENV: ""

environment:
  PYPI_PASSWORD:
    secure: FJVZ1vvBPXz2Wll6xU3xuIin/Ox5lvRygOxHHWTDH0w=

  matrix:
    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.8"
      PYTHON_ARCH: "32"

#    - PYTHON: "C:\\Python27-x64"
#      PYTHON_VERSION: "2.7.8"
#      PYTHON_ARCH: "64"
#
#    - PYTHON: "C:\\Python33"
#      PYTHON_VERSION: "3.3.5"
#      PYTHON_ARCH: "32"
#
#    - PYTHON: "C:\\Python33-x64"
#      PYTHON_VERSION: "3.3.5"
#      PYTHON_ARCH: "64"

#   - PYTHON: "C:\\Python34"
#     PYTHON_VERSION: "3.4.3"
#     PYTHON_ARCH: "32"

#    - PYTHON: "C:\\Python34-x64"
#      PYTHON_VERSION: "3.4.3"
#      PYTHON_ARCH: "64"

install:
  # Check that we have the expected version and architecture for Python
  - "%PYTHON%\\python.exe --version"
  - "%PYTHON%\\python.exe -m pip install -r dev-requirements.txt"

build: off  # Not a C# project, build stuff at the test step instead.

test_script:
  # Build the compiled extension and run the project tests
  - "%PYTHON%\\python.exe nosetests"

after_test:
  # if tests OK, create whl package
  - "%PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

#deploy:
#  - provider: PyPI
#    on:
#      branch: master
#      appveyor_repo_tag : true

deploy-script:
  - "%PYTHON%\\python.exe -m twine upload -r https://testpypi.python.org/pypi -u dougthor42 -p %PYPI_PASSWORD% dist/*.whl